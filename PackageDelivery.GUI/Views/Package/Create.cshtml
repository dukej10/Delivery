@model PackageDelivery.GUI.Models.Core.PackageModel

@{
    ViewBag.Title = "Create";
}

<h2>Crear Paquete</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PackageModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Depth, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Depth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Depth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.IdOffice)
                @Html.DropDownListFor(model => model.IdOffice, new SelectList(Model.OfficeList, "Id", "Name"), new { @class = "form-control chosen-select-single", @id = "selOffice", data_placeholder = "-- Seleccione la Oficina --" })
                @Html.ValidationMessageFor(model => model.IdOffice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-top: 10px;">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div style="margin-top: 10px;">
    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
