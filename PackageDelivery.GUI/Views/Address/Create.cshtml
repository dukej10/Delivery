@model PackageDelivery.GUI.Models.Core.AddressModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4> Crear Persona</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.TipoCalle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TipoCalle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TipoCalle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.TipoInmueble, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TipoInmueble, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TipoInmueble, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.Barrio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Barrio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Barrio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.Actual, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-check">
                @Html.CheckBoxFor(model => model.Actual, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.ValidationMessageFor(model => model.Actual, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.IdPersona)
        @Html.DropDownListFor(model => model.IdPersona, new SelectList(Model.PersonaList, "Id", "FirstName"), new { @class = "form-control chosen-select-single", @id = "selPersona", data_placeholder = "-- Seleccione la persona --" })
        @Html.ValidationMessageFor(model => model.IdPersona, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-sm-6">
        @Html.LabelFor(model => model.IdMunicipio)
        @Html.DropDownListFor(model => model.IdMunicipio, new SelectList(Model.MunicipioList, "Id", "Name"), new { @class = "form-control chosen-select-single", @id = "selMunicipio", data_placeholder = "-- Seleccione el municipio --" })
        @Html.ValidationMessageFor(model => model.IdMunicipio, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="margin-top: 10px;">
        <input type="submit" value="Crear" class="btn btn-primary" />
    </div>
</div>

</div>
}

<div style="margin-top: 10px;">
    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
